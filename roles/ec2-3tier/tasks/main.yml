- name: EC2 Launch webserver instances
  ec2:
    image: "{{ ec2_image }}"
    instance_type: "{{ ec2_instance_type }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    key_name: "{{ ec2_keypair }}"
    region: "{{ ec2_region }}"
    wait: true
    count: "{{ ec2_webserver_instance_count }}"
    instance_tags: "{'ansible_group':'webservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'3Tier''Webserver'}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
    group_id: "{{ ec2_security_group }}"
  register: ec2

- name: EC2 Launch database instance
  ec2:
    image: "{{ ec2_image }}"
    instance_type: "{{ ec2_instance_type }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    key_name: "{{ ec2_keypair }}"
    region: "{{ ec2_region }}"
    wait: true
    count: "{{ ec2_dbserver_instance_count|int }}"
    instance_tags: "{'ansible_group':'appdbs', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'3Tier''Appdbs'}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
    group_id: "{{ ec2_security_group }}"  # or you can say 'default' here
  register: ec2

- name: EC2 Launch load balancing instance
  ec2:
    image: "{{ ec2_image }}"
    instance_type: "{{ ec2_instance_type }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    key_name: "{{ ec2_keypair }}"
    region: "{{ ec2_region }}"
    wait: true
    count: "{{ ec2_lbserver_instance_count|int }}"
    instance_tags: "{'ansible_group':'frontends', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'3Tier''Frontend'}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
    group_id: "{{ ec2_security_group }}"  # or you can say 'default' here
  register: ec2

- name: EC2 Launch monitoring instance
  ec2:
    image: "{{ ec2_image }}"
    instance_type: "{{ ec2_instance_type }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    key_name: "{{ ec2_keypair }}"
    region: "{{ ec2_region }}" 
    wait: true
    count: "{{ ec2_monitoring_instance_count|int }}"
    instance_tags: "{'ansible_group':'monitoring', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'3Tier''Monitoring'}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
    group_id: "{{ ec2_security_group }}"  # or you can say 'default' here
  register: ec2

- name: EC2 Wait for SSH to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 60
    timeout: 320
    state: started
  with_items: "{{ ec2.instances }}"
  
  
- name: EC2 Wait for SSH to come up
  debug:
    var: "{{ item }}"
  with_items: "{{ ec2.instances }}"


